/**
* Name: Genesis
* Based on the internal empty template. 
* Author: DiegoSaitta
* Tags: 
*/

model Genesis
global {
    file shape_file_buildings <- file("../includes/PopBuild.shp");
    file shape_file_roads <- file("../includes/RodNov16.shp");
    file shape_file_bounds <- file("../includes/RodNov16.shp");
    geometry shape <- envelope(shape_file_bounds);
    float step <- 0.5 #mn;
    date starting_date <- date("2019-09-01-00-00-00");

    list males<-[9, 13, 20];
    list females<-[9, 12, 23];
    
    int min_work_start <- 6;
    int max_work_start <- 8;
    int min_work_end <- 16;
    int max_work_end <- 20;
    float min_speed <- 1.0 #km / #h;
    float max_speed <- 5.0 #km / #h;
    graph the_graph;
    list<building> residential_buildings;
    list<building> industrial_buildings;
    list<building> other_residential;
    list<car> cars;
    
    init {
        create building from: shape_file_buildings with: [type::string(read("NATURE"))] {
            if (name = "Chiesa di San Lorenzo Martire" or name = "Hotel Le Sorgenti") {
                color <- #red;
            } else {
                bool var0 <- flip(0.9);
                if var0 {
                    color <- #skyblue;
                    type <- "Residential";
                } else {
                    color <- #orange;
                    type <- "Industrial";
                }
            }
        }

        create road from: shape_file_roads;
        map<road, float> weights_map <- road as_map(each::(each.destruction_coeff * each.shape.perimeter));
        the_graph <- as_edge_graph(road, 50) with_weights weights_map;

        residential_buildings <- building where (each.type = "Residential");
        industrial_buildings <- building where (each.type = "Industrial");
        other_residential <- building where (each.name = "Chiesa di San Lorenzo Martire" or each.name = "Hotel Le Sorgenti");

        create car number: 5 {
            location <- one_of(residential_buildings);  
            cars <- car;
        }

        loop i from: 0 to: length(males) - 1 {
            create people number: males[i] {
                color <- #green;
                speed <- rnd(min_speed, max_speed);
                start_work <- rnd(min_work_start, max_work_start);
                end_work <- rnd(min_work_end, max_work_end);
                living_place <- one_of(residential_buildings);
                working_place <- one_of(industrial_buildings);
                objective <- "resting";
                location <- any_location_in(living_place); // Set initial location inside a residential building
                personal_car <- one_of(cars);
                car_target <- any_location_in(personal_car);             
                size <- 5;
            }
        }

        loop i from: 0 to: length(females) - 1 {
            create people number: females[i] {
                color <- #pink;
                speed <- rnd(min_speed, max_speed);
                start_work <- rnd(min_work_start, max_work_start);
                end_work <- rnd(min_work_end, max_work_end);
                living_place <- one_of(residential_buildings);
                working_place <- one_of(industrial_buildings);
                objective <- "resting";
                location <- any_location_in(living_place); // Set initial location inside a residential building
                personal_car <- one_of(cars);
                car_target <- any_location_in(personal_car);               
                size <- 5;
            }
        }
    }
}

species building {
    string type;
    rgb color <- #red;

    aspect base {
        draw shape color: color;
    }
}

species road {
    float destruction_coeff <- rnd(1.0, 2.0) max: 2.0;
    rgb color <- #black;
    aspect base {
        draw shape color: color;
    }
}

species car skills:[moving] {
    point location <- nil;
    rgb color <- #blue;
    float size <- 20;
    int people_in <- 0;
    point driver_target <- nil;

    aspect base {
        draw triangle(size) color: color border: #black rotate: heading + 45;
    }

    reflex move when: people_in < 4 {
        // Calculate the path to the work location
        path path_followed <- goto(target: driver_target, on: the_graph, return_path: true);
        list<geometry> segments <- path_followed.segments;
        loop line over: segments {
            float dist <- line.perimeter;
        }
    }
}

species people skills:[moving] {
    rgb color <- #blue;
    building living_place <- nil;
    building working_place <- nil;
    int start_work;
    int end_work;
    string objective;
    point the_target <- nil;
    car personal_car <- nil;
    float size;
    point car_target;

    reflex time_to_work when: current_date.hour = start_work and objective = "resting" {
        objective <- "working";
        the_target <- any_location_in(working_place);
    }

    reflex time_to_go_home when: current_date.hour = end_work and objective = "working" {
        objective <- "resting";
        the_target <- any_location_in(living_place);
    }

    reflex move {
        path path_followed <- goto(target: car_target, on: the_graph, return_path: true);
        list<geometry> segments <- path_followed.segments;
        loop line over: segments {
            float dist <- line.perimeter;
        }
        if (car_target = location) {
            personal_car.people_in <- personal_car.people_in + 1;
            if (personal_car.people_in >= 4) {
                // Car is full, reset the car target to the living place
                car_target <- any_location_in(living_place);
            }
        }
    }

    aspect base {
        draw circle(size) color: color border: #black;
    }
}

experiment city_people type: gui {
    output {
        display city_display type: 3d {
            species building aspect: base;
            species road aspect: base;
            species people aspect: base;
            species car aspect: base;
        }
    }
}
